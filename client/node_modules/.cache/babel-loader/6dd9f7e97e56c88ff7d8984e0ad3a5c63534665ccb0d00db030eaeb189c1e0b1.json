{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js\";\nimport React from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserQuestion = ({\n  questionId,\n  onClose,\n  isEditOpen\n}) => {\n  function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        Navigate('/login');\n        return;\n      }\n      // send a fetch request from the api to the server for getting the question to change\n      const req = fetch(`${baseApiUrl}getEditQuestion`, {\n        method: \"GET\",\n        headers: {\n          'x-access-token': token\n        },\n        body: JSON.stringify({\n          // send the questionId through the body of the request\n          questionId: questionId\n        })\n      });\n    } catch (e) {}\n  }\n  return isEditOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-screen-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question ID: \", questionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_c = EditUserQuestion;\nexport default EditUserQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditUserQuestion\");","map":{"version":3,"names":["React","baseApiUrl","Navigate","jsxDEV","_jsxDEV","EditUserQuestion","questionId","onClose","isEditOpen","getEditModal","token","localStorage","getItem","req","fetch","method","headers","body","JSON","stringify","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js"],"sourcesContent":["import React from \"react\";\nimport \"./EditUserQuestion.css\"; \nimport { baseApiUrl } from \"../apiConfig\";\nimport { Navigate } from \"react-router-dom\";\n\nconst EditUserQuestion = ({ questionId, onClose, isEditOpen }) => {\n  function getEditModal(){\n    try{\n      const token = localStorage.getItem(\"token\");\n      if(!token){\n        Navigate('/login');\n        return\n      }\n      // send a fetch request from the api to the server for getting the question to change\n      const req = fetch(`${baseApiUrl}getEditQuestion`,{\n        method:\"GET\",\n        headers: {\n          'x-access-token': token,\n        },\n        body: JSON.stringify({\n          // send the questionId through the body of the request\n          questionId: questionId\n        })\n      });\n    }catch(e){\n\n    }\n  }\n  return (\n    isEditOpen && (\n      <div className=\"full-screen-modal\">\n        <div className=\"modal-content\">\n          <h1>Edit Question</h1>\n          <p>Question ID: {questionId}</p>\n          <textarea\n            placeholder=\"Ask your question...\"\n          />\n          <button className=\"close-button\" onClick={onClose}>\n            Close\n          </button>\n          {/* Add additional elements as needed */}\n          {/* For example, a submit button */}\n          {/* <button className=\"submit-button\">Submit</button> */}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default EditUserQuestion;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAChE,SAASC,YAAYA,CAAA,EAAE;IACrB,IAAG;MACD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAG,CAACF,KAAK,EAAC;QACRR,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MACA;MACA,MAAMW,GAAG,GAAGC,KAAK,CAAE,GAAEb,UAAW,iBAAgB,EAAC;QAC/Cc,MAAM,EAAC,KAAK;QACZC,OAAO,EAAE;UACP,gBAAgB,EAAEN;QACpB,CAAC;QACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB;UACAb,UAAU,EAAEA;QACd,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,QAAMc,CAAC,EAAC,CAET;EACF;EACA,OACEZ,UAAU,iBACRJ,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChClB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BlB,OAAA;QAAAkB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtB,OAAA;QAAAkB,QAAA,GAAG,eAAa,EAAChB,UAAU;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCtB,OAAA;QACEuB,WAAW,EAAC;MAAsB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFtB,OAAA;QAAQiB,SAAS,EAAC,cAAc;QAACO,OAAO,EAAErB,OAAQ;QAAAe,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;AAEL,CAAC;AAACG,EAAA,GA1CIxB,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}