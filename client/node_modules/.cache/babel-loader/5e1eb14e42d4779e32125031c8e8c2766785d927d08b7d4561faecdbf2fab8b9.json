{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserQuestion = ({\n  questionId,\n  onClose,\n  isEditOpen\n}) => {\n  _s();\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        return;\n      }\n      // send a fetch request from the api to the server for getting the question to change\n      const response = fetch(`${baseApiUrl}editQuestion`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        },\n        body: JSON.stringify({\n          // send the questionId through the body of the request\n          questionId: questionId\n        })\n      });\n      // if (!response.ok) {\n      //   // Check for HTTP error status\n      //   console.error(`HTTP error! Status: ${response.status}`);\n      //   return;\n      // }\n\n      const fetchedData = await response.json();\n      if (fetchedData.status === \"ok\") {\n        console.log('data fetched');\n      }\n    } catch (e) {\n      console.error(\"Error during fetch:\", e);\n    }\n  }\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen]);\n  return isEditOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-screen-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question ID: \", questionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(EditUserQuestion, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EditUserQuestion;\nexport default EditUserQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditUserQuestion\");","map":{"version":3,"names":["React","useEffect","baseApiUrl","jsxDEV","_jsxDEV","EditUserQuestion","questionId","onClose","isEditOpen","_s","getEditModal","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","fetchedData","json","status","console","log","e","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\n\nconst EditUserQuestion = ({ questionId, onClose, isEditOpen }) => {\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        return;\n      }\n      // send a fetch request from the api to the server for getting the question to change\n      const response = fetch(`${baseApiUrl}editQuestion`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({\n          // send the questionId through the body of the request\n          questionId: questionId,\n        }),\n      });\n      // if (!response.ok) {\n      //   // Check for HTTP error status\n      //   console.error(`HTTP error! Status: ${response.status}`);\n      //   return;\n      // }\n  \n      const fetchedData = await response.json();\n\n      if (fetchedData.status === \"ok\") {\n        console.log('data fetched');\n      }\n    } catch (e) {\n      console.error(\"Error during fetch:\", e);\n    }\n  }\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen]);\n  \n  return (\n    isEditOpen && (\n      <div className=\"full-screen-modal\">\n        <div className=\"modal-content\">\n          <h1>Edit Question</h1>\n          <p>Question ID: {questionId}</p>\n          <textarea placeholder=\"Ask your question...\" />\n          <button className=\"close-button\" onClick={onClose}>\n            Close\n          </button>\n          {/* Add additional elements as needed */}\n          {/* For example, a submit button */}\n          {/* <button className=\"submit-button\">Submit</button> */}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default EditUserQuestion;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChE;EACA,eAAeC,YAAYA,CAAA,EAAG;IAC5B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV;MACF;MACA;MACA,MAAMG,QAAQ,GAAGC,KAAK,CAAE,GAAEb,UAAW,cAAa,EAAE;QAClDc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,gBAAgB,EAAEN;QACpB,CAAC;QACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB;UACAd,UAAU,EAAEA;QACd,CAAC;MACH,CAAC,CAAC;MACF;MACA;MACA;MACA;MACA;;MAEA,MAAMe,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEzC,IAAID,WAAW,CAACE,MAAM,KAAK,IAAI,EAAE;QAC/BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVF,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAED,CAAC,CAAC;IACzC;EACF;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACdE,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,OACEA,UAAU,iBACRJ,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCzB,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzB,OAAA;QAAAyB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB7B,OAAA;QAAAyB,QAAA,GAAG,eAAa,EAACvB,UAAU;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC7B,OAAA;QAAU8B,WAAW,EAAC;MAAsB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/C7B,OAAA;QAAQwB,SAAS,EAAC,cAAc;QAACO,OAAO,EAAE5B,OAAQ;QAAAsB,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;AAEL,CAAC;AAACxB,EAAA,CA1DIJ,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AA4DtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}