{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUserQuestions = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client side storage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the api endpoint for questions\n      const req = await fetch(\"http://localhost:1337/api/getQuestions\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      const data = await req.json();\n      console.log(data);\n      if (data.status === \"ok\") {\n        setNewQuestion(data.questions);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    }\n  }\n  useEffect(() => {\n    // if (newQuestion) {\n    fetchUserSpecificQuestions();\n    // }\n  }, [newQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: newQuestion && newQuestion.length > 0 ? newQuestion.map(addedQuestion => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: addedQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, addedQuestion._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GetUserQuestions, \"URixyAguxJ6U4Dm0gapa3+mYLVg=\", false, function () {\n  return [useNavigate];\n});\n_c = GetUserQuestions;\nexport default GetUserQuestions;\nvar _c;\n$RefreshReg$(_c, \"GetUserQuestions\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GetUserQuestions","_s","navigate","newQuestion","setNewQuestion","fetchUserSpecificQuestions","token","localStorage","getItem","req","fetch","method","headers","data","json","console","log","status","questions","alert","error","children","length","map","addedQuestion","question","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GetUserQuestions = () => {\n  const navigate = useNavigate();\n  const [newQuestion, setNewQuestion] = useState(\"\");\n\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client side storage\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the api endpoint for questions\n      const req = await fetch(\"http://localhost:1337/api/getQuestions\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n      const data = await req.json();\n      console.log(data);\n\n      if (data.status === \"ok\") {\n        setNewQuestion(data.questions);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    }\n  }\n\n  useEffect(() => {\n    // if (newQuestion) {\n      fetchUserSpecificQuestions();\n    // }\n  }, [newQuestion]);\n\n  return (\n    <ul>\n      {newQuestion && newQuestion.length > 0 ? (\n        newQuestion.map((addedQuestion) => (\n          <div key={addedQuestion._id}>\n            <li>{addedQuestion.question}</li>\n          </div>\n        ))\n      ) : (\n        <p>No questions found</p>\n      )}\n    </ul>\n  );\n};\n\nexport default GetUserQuestions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,eAAeS,0BAA0BA,CAAA,EAAG;IAC1C,IAAI;MACF;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVJ,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;;MAEA;MACA,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QAChEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAEN;QACpB;MACF,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAIA,IAAI,CAACI,MAAM,KAAK,IAAI,EAAE;QACxBb,cAAc,CAACS,IAAI,CAACK,SAAS,CAAC;MAChC,CAAC,MAAM;QACLC,KAAK,CAACN,IAAI,CAACO,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF;EAEAxB,SAAS,CAAC,MAAM;IACd;IACEU,0BAA0B,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACEJ,OAAA;IAAAsB,QAAA,EACGlB,WAAW,IAAIA,WAAW,CAACmB,MAAM,GAAG,CAAC,GACpCnB,WAAW,CAACoB,GAAG,CAAEC,aAAa,iBAC5BzB,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAAsB,QAAA,EAAKG,aAAa,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GADzBL,aAAa,CAACM,GAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CACN,CAAC,gBAEF9B,OAAA;MAAAsB,QAAA,EAAG;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAAC5B,EAAA,CAvDID,gBAAgB;EAAA,QACHH,WAAW;AAAA;AAAAkC,EAAA,GADxB/B,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}