{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/AppBar/AppBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Home, Bell, Search, PenSquare } from \"lucide-react\";\nimport \"./AppBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppBar = props => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false);\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768) {\n        setMenuOpen(true);\n      } else {\n        setMenuOpen(false);\n      }\n    };\n\n    // Initial check and add event listener for window resize\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `AppBar ${menuOpen ? \"mobile\" : \"\"}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AppBar, \"YpXa3kgiBOFhFYWp8S78i7Nbdv8=\");\n_c = AppBar;\nexport default AppBar;\nvar _c;\n$RefreshReg$(_c, \"AppBar\");","map":{"version":3,"names":["React","useState","useEffect","Home","Bell","Search","PenSquare","jsxDEV","_jsxDEV","AppBar","props","_s","menuOpen","setMenuOpen","handleResize","window","innerWidth","addEventListener","removeEventListener","toggleMenu","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/AppBar/AppBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Home, Bell, Search, PenSquare } from \"lucide-react\";\nimport \"./AppBar.css\";\n\nconst AppBar = (props) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768) {\n        setMenuOpen(true);\n      } else {\n        setMenuOpen(false);\n      }\n    };\n\n    // Initial check and add event listener for window resize\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  return (\n    <div className={`AppBar ${menuOpen ? \"mobile\" : \"\"}`}>\n      {/* Rest of your code remains the same */}\n    </div>\n  );\n};\n\nexport default AppBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,QAAQ,cAAc;AAC5D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QAC5BH,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLA,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC;;IAED;IACAC,YAAY,CAAC,CAAC;IACdC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBN,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA;IAAKY,SAAS,EAAG,UAASR,QAAQ,GAAG,QAAQ,GAAG,EAAG;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhD,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BIF,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}