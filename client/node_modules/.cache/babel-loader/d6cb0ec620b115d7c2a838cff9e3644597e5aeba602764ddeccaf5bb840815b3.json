{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Dashboard/GetProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetProfile = () => {\n  _s();\n  const [profile, setProfile] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // Fetch profile from the server\n  async function getProfile() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      alert(token);\n      const response = await fetch(\"http://localhost:1337/api/getProfile\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.status === \"ok\") {\n          setLoading(false);\n          setProfile(\"http://localhost:1337/\" + data.profile);\n        } else {\n          alert(data.error);\n        }\n      } else {\n        alert(\"Error: Unable to fetch profile. Check the network response.\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching the profile:\", error);\n      alert(\"An error occurred while fetching the profile. Please check the console for details.\");\n    }\n  }\n\n  // Execute the getProfile function when the component mounts\n  useEffect(() => {\n    getProfile();\n  }, []); // An empty dependency array ensures this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: profile,\n      alt: \"User Profile\",\n      style: {\n        height: 100,\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GetProfile, \"5dJX3QHSK3ma9+rQLAebAWq6NIo=\");\n_c = GetProfile;\nexport default GetProfile;\nvar _c;\n$RefreshReg$(_c, \"GetProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GetProfile","_s","profile","setProfile","loading","setLoading","getProfile","token","localStorage","getItem","alert","response","fetch","method","headers","ok","data","json","status","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","height","width","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Dashboard/GetProfile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst GetProfile = () => {\n  const [profile, setProfile] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // Fetch profile from the server\n  async function getProfile() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      alert(token)\n\n      const response = await fetch(\"http://localhost:1337/api/getProfile\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.status === \"ok\") {\n          setLoading(false);\n          setProfile(\"http://localhost:1337/\" + data.profile);\n        } else {\n          alert(data.error);\n        }\n      } else {\n        alert(\"Error: Unable to fetch profile. Check the network response.\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching the profile:\", error);\n      alert(\n        \"An error occurred while fetching the profile. Please check the console for details.\"\n      );\n    }\n  }\n\n  // Execute the getProfile function when the component mounts\n  useEffect(() => {\n    getProfile();\n  }, []); // An empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <img\n          src={profile}\n          alt=\"User Profile\"\n          style={{ height: 100, width: 200 }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GetProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,eAAeU,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3CC,KAAK,CAACH,KAAK,CAAC;MAEZ,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAEP;QACpB;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;UACxBb,UAAU,CAAC,KAAK,CAAC;UACjBF,UAAU,CAAC,wBAAwB,GAAGa,IAAI,CAACd,OAAO,CAAC;QACrD,CAAC,MAAM;UACLQ,KAAK,CAACM,IAAI,CAACG,KAAK,CAAC;QACnB;MACF,CAAC,MAAM;QACLT,KAAK,CAAC,6DAA6D,CAAC;MACtE;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrET,KAAK,CACH,qFACF,CAAC;IACH;EACF;;EAEA;EACAb,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAsB,QAAA,EACGjB,OAAO,gBACNL,OAAA;MAAAsB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB1B,OAAA;MACE2B,GAAG,EAAExB,OAAQ;MACbyB,GAAG,EAAC,cAAc;MAClBC,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAI;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtDID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}