{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditUserQuestion = ({\n  questionId,\n  onClose,\n  isEditOpen\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [questionData, setQuestionData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n      setLoading(true);\n\n      // send a fetch request from the api to the server for getting the question to change\n      const response = await fetch(`${baseApiUrl}getEditQuestion`, {\n        method: \"POST\",\n        headers: {\n          \"x-access-token\": token\n        },\n        // Fix: Include questionId in the request body\n        body: JSON.stringify({\n          questionId: questionId\n        })\n      });\n      const fetchedData = await response.json();\n      if (fetchedData.status === \"ok\") {\n        setQuestionData(fetchedData);\n      } else {\n        console.error(fetchedData.error);\n      }\n    } catch (error) {\n      console.error(\"Error fetching edit question:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen, questionId]); // Include questionId as a dependency\n\n  return isEditOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-screen-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question ID: \", questionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Ask your question...\",\n          value: (questionData === null || questionData === void 0 ? void 0 : questionData.content) || \"\",\n          onChange: e => {\n            // Handle textarea value change if needed\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n_s(EditUserQuestion, \"g6ELWAWQ5xYcncQk2/4PWWnBlYg=\", false, function () {\n  return [useNavigate];\n});\n_c = EditUserQuestion;\nexport default EditUserQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditUserQuestion\");","map":{"version":3,"names":["React","useEffect","useState","baseApiUrl","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUserQuestion","questionId","onClose","isEditOpen","_s","navigate","questionData","setQuestionData","loading","setLoading","getEditModal","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","fetchedData","json","status","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","content","onChange","e","onClick","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst EditUserQuestion = ({ questionId, onClose, isEditOpen }) => {\n  const navigate = useNavigate();\n  const [questionData, setQuestionData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      setLoading(true);\n\n      // send a fetch request from the api to the server for getting the question to change\n      const response = await fetch(`${baseApiUrl}getEditQuestion`, {\n        method: \"POST\",\n        headers: {\n          \"x-access-token\": token,\n        },\n        // Fix: Include questionId in the request body\n        body: JSON.stringify({\n          questionId: questionId,\n        }),\n      });\n\n      const fetchedData = await response.json();\n\n      if (fetchedData.status === \"ok\") {\n        setQuestionData(fetchedData);\n      } else {\n        console.error(fetchedData.error);\n      }\n    } catch (error) {\n      console.error(\"Error fetching edit question:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen, questionId]); // Include questionId as a dependency\n\n  return (\n    isEditOpen && (\n      <div className=\"full-screen-modal\">\n        <div className=\"modal-content\">\n          <h1>Edit Question</h1>\n          <p>Question ID: {questionId}</p>\n          {loading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <textarea\n                placeholder=\"Ask your question...\"\n                value={questionData?.content || \"\"}\n                onChange={(e) => {\n                  // Handle textarea value change if needed\n                }}\n              />\n              <button className=\"close-button\" onClick={onClose}>\n                Close\n              </button>\n              {/* Render additional elements as needed */}\n              {/* For example, a submit button */}\n              {/* <button className=\"submit-button\">Submit</button> */}\n            </>\n          )}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default EditUserQuestion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}