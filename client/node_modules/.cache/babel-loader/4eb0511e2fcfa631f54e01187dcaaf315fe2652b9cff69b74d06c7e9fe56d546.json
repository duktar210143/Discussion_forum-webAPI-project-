{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./GetUserQuestions.css\"; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUserQuestions = () => {\n  _s();\n  const navigate = useNavigate();\n  const [newQuestion, setNewQuestion] = useState([]);\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client-side storage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the API endpoint for questions\n      const req = await fetch(\"http://localhost:1337/api/getQuestions\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      const data = await req.json();\n      if (data.status === \"ok\") {\n        setNewQuestion(data.questions);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    }\n  }\n  useEffect(() => {\n    fetchUserSpecificQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"question-list\",\n    children: newQuestion && newQuestion.length > 0 ? newQuestion.map(addedQuestion => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"question-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: addedQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"heart-button\",\n            children: /*#__PURE__*/_jsxDEV(Pencil, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            children: \"\\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, addedQuestion._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GetUserQuestions, \"RF/ns8aIPZuSBe/1z/M1uuvXRy8=\", false, function () {\n  return [useNavigate];\n});\n_c = GetUserQuestions;\nexport default GetUserQuestions;\nvar _c;\n$RefreshReg$(_c, \"GetUserQuestions\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GetUserQuestions","_s","navigate","newQuestion","setNewQuestion","fetchUserSpecificQuestions","token","localStorage","getItem","req","fetch","method","headers","data","json","status","questions","alert","error","console","className","children","length","map","addedQuestion","question","fileName","_jsxFileName","lineNumber","columnNumber","Pencil","_id","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./GetUserQuestions.css\"; // Import your CSS file\n\nconst GetUserQuestions = () => {\n  const navigate = useNavigate();\n  const [newQuestion, setNewQuestion] = useState([]);\n\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client-side storage\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the API endpoint for questions\n      const req = await fetch(\"http://localhost:1337/api/getQuestions\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n      const data = await req.json();\n\n      if (data.status === \"ok\") {\n        setNewQuestion(data.questions);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    }\n  }\n\n  useEffect(() => {\n    fetchUserSpecificQuestions();\n  }, []);\n\n  return (\n    <ul className=\"question-list\">\n      {newQuestion && newQuestion.length > 0 ? (\n        newQuestion.map((addedQuestion) => (\n          <li key={addedQuestion._id} className=\"question-item\">\n            <div className=\"question-header\">\n              <h3>{addedQuestion.question}</h3>\n              <div className=\"question-actions\">\n                <button className=\"heart-button\">\n                <Pencil />\n                </button>\n                <button className=\"edit-button\">âœŽ</button>\n              </div>\n            </div>\n            <p className=\"question-info\">\n              {/* Additional information can go here */}\n            </p>\n          </li>\n        ))\n      ) : (\n        <p>No questions found</p>\n      )}\n    </ul>\n  );\n};\n\nexport default GetUserQuestions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}