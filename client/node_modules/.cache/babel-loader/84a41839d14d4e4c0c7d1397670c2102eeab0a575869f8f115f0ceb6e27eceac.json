{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./GetUserQuestions.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import question state provider\nimport { RecentAddedQuestion } from \"../../Providers/LatestQuestionContext\";\nimport { Pencil, Heart, Reply } from \"lucide-react\";\nimport EditUserQuestion from \"./EditUserQuestions\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetUserQuestions = ({\n  isEditOpen,\n  onEditClose,\n  openEditModal\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    question,\n    setQuestion\n  } = RecentAddedQuestion();\n  const [isLoading, setIsLoading] = useState(true); // Track loading state\n\n  // state of edited question\n  // model open true or false\n\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client-side storage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n      // getQuestions\n      // send a fetch request to the API endpoint for questions\n      const req = await fetch($baseApiUrl, {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      const data = await req.json();\n      if (data.status === \"ok\") {\n        const reversedQuestions = data.questions ? data.questions.reverse() : [];\n        setQuestion(reversedQuestions);\n        setIsLoading(false);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    } finally {\n      setIsLoading(false); // Mark loading as complete\n    }\n  }\n\n  useEffect(() => {\n    if (question) {\n      fetchUserSpecificQuestions();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"question-list\",\n      children: question && question.length > 0 ? question.map(addedQuestion => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"question-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: addedQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"heart-button\",\n              children: /*#__PURE__*/_jsxDEV(Heart, {\n                strokeWidth: 1.5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => openEditModal(addedQuestion._id),\n              children: /*#__PURE__*/_jsxDEV(Pencil, {\n                strokeWidth: 1.5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-button\",\n              children: /*#__PURE__*/_jsxDEV(Reply, {\n                strokeWidth: 1.5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, addedQuestion._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-questions-found\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions found. Ask a question to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), isEditOpen && /*#__PURE__*/_jsxDEV(EditUserQuestion, {\n      onClose: onEditClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(GetUserQuestions, \"mtX1nWo+XulyP1Szewhc3edUGt0=\", false, function () {\n  return [useNavigate];\n});\n_c = GetUserQuestions;\nexport default GetUserQuestions;\nvar _c;\n$RefreshReg$(_c, \"GetUserQuestions\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","RecentAddedQuestion","Pencil","Heart","Reply","EditUserQuestion","baseApiUrl","jsxDEV","_jsxDEV","GetUserQuestions","isEditOpen","onEditClose","openEditModal","_s","navigate","question","setQuestion","isLoading","setIsLoading","fetchUserSpecificQuestions","token","localStorage","getItem","req","fetch","$baseApiUrl","method","headers","data","json","status","reversedQuestions","questions","reverse","alert","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","addedQuestion","strokeWidth","onClick","_id","onClose","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/GetUserQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./GetUserQuestions.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import question state provider\nimport { RecentAddedQuestion } from \"../../Providers/LatestQuestionContext\";\nimport { Pencil, Heart, Reply } from \"lucide-react\";\nimport EditUserQuestion from \"./EditUserQuestions\";\nimport { baseApiUrl } from \"../apiConfig\";\nconst GetUserQuestions = ({ isEditOpen, onEditClose, openEditModal }) => {\n  const navigate = useNavigate();\n  const { question, setQuestion } = RecentAddedQuestion();\n  const [isLoading, setIsLoading] = useState(true); // Track loading state\n\n  // state of edited question\n  // model open true or false\n\n  async function fetchUserSpecificQuestions() {\n    try {\n      // get token from client-side storage\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n// getQuestions\n      // send a fetch request to the API endpoint for questions\n      const req = await fetch( $baseApiUrl, {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n      const data = await req.json();\n\n      if (data.status === \"ok\") {\n        const reversedQuestions = data.questions\n          ? data.questions.reverse()\n          : [];\n        setQuestion(reversedQuestions);\n        setIsLoading(false);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the questions.\");\n    } finally {\n      setIsLoading(false); // Mark loading as complete\n    }\n  }\n\n  useEffect(() => {\n    if (question) {\n      fetchUserSpecificQuestions();\n    }\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"loading-spinner\">\n          <div className=\"loader\"></div>\n          <p>Loading...</p>\n        </div>\n      ) : (\n        <ul className=\"question-list\">\n          {question && question.length > 0 ? (\n            question.map((addedQuestion) => (\n              <li key={addedQuestion._id} className=\"question-item\">\n                <div className=\"question-header\">\n                  <h4>{addedQuestion.question}</h4>\n                  <div className=\"question-actions\">\n                    <button className=\"heart-button\">\n                      <Heart strokeWidth={1.5} />\n                    </button>\n                    <button className=\"edit-button\" onClick={() => openEditModal(addedQuestion._id)}>\n                      <Pencil strokeWidth={1.5} />\n                    </button>\n                    {/* Upon the 'Edit' button click, update the 'Id' state to correspond to the respective question. */}\n                    <button className=\"reply-button\">\n                      <Reply strokeWidth={1.5} />\n                    </button>\n                  </div>\n                </div>\n                <p className=\"question-info\"></p>\n              </li>\n            ))\n          ) : (\n            <div className=\"no-questions-found\">\n              <p>No questions found. Ask a question to get started!</p>\n            </div>\n          )}\n        </ul>\n      )}\n         {/* Conditionally render EditUserQuestion based on isEditOpen */}\n         {isEditOpen && (\n        <EditUserQuestion\n          onClose={onEditClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GetUserQuestions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}