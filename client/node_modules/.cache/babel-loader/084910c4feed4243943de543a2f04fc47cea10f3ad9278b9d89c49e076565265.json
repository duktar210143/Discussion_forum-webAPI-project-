{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/SetUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import custom hook RecentAdded\nimport \"./SetUserQuestions.css\";\nimport jwt from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetUserQuestions = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleSubmit = () => {\n    onSubmit(question);\n    setQuestion(\"\");\n    onClose();\n  };\n\n  // post request to add the question to the database\n  async function postQuestions() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        console.log(\"token does not exist\");\n        return;\n      }\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the api endPoint\n      const req = await fetch(\"http://localhost:1337/api/setQuestions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        },\n        body: JSON.stringify({\n          question: question\n        })\n      });\n      const data = await req.json();\n      if (data.status === \"ok\") {\n        setQuestion(data.reply);\n        setQuestion(\"\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while updating the quote:\", error);\n      alert(\"An error occurred while updating the quote. Please check the console for details.\");\n    }\n  }\n  return isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-screen-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask your question...\",\n        value: question,\n        onChange: handleQuestionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: postQuestions,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button \",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n_s(SetUserQuestions, \"OttNkK4FN44yjSqBJd7gK1Xjg4E=\", false, function () {\n  return [useNavigate];\n});\n_c = SetUserQuestions;\nexport default SetUserQuestions;\nvar _c;\n$RefreshReg$(_c, \"SetUserQuestions\");","map":{"version":3,"names":["React","useState","useNavigate","jwt","jsxDEV","_jsxDEV","SetUserQuestions","isOpen","onClose","onSubmit","_s","question","setQuestion","navigate","handleQuestionChange","event","target","value","handleSubmit","postQuestions","token","localStorage","getItem","console","log","user","decode","removeItem","req","fetch","method","headers","body","JSON","stringify","data","json","status","reply","error","alert","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/SetUserQuestions.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import custom hook RecentAdded\nimport \"./SetUserQuestions.css\";\nimport jwt from \"jsonwebtoken\";\n\nconst SetUserQuestions = ({ isOpen, onClose, onSubmit }) => {\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleQuestionChange = (event) => {\n    setQuestion(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    onSubmit(question);\n    setQuestion(\"\");\n    onClose();\n  };\n\n  // post request to add the question to the database\n  async function postQuestions() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        console.log(\"token does not exist\");\n        return;\n      }\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request to the api endPoint\n      const req = await fetch(\"http://localhost:1337/api/setQuestions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n        body: JSON.stringify({\n          question: question,\n        }),\n      });\n\n      const data = await req.json();\n      if (data.status === \"ok\") {\n        setQuestion(data.reply);\n        setQuestion(\"\");\n      }\n    } catch (error) {\n      console.error(\"An error occurred while updating the quote:\", error);\n      alert(\n        \"An error occurred while updating the quote. Please check the console for details.\"\n      );\n    }\n  }\n\n  return (\n    isOpen && (\n      <div className=\"full-screen-modal\">\n        <div className=\"modal-content\">\n          <textarea\n            placeholder=\"Ask your question...\"\n            value={question}\n            onChange={handleQuestionChange}\n          />\n          <button className=\"submit-button\" onClick={postQuestions}>\n            Submit\n          </button>\n          <button className=\"close-button \" onClick={onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default SetUserQuestions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}