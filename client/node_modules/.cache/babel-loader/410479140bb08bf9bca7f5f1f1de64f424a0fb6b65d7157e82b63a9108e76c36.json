{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserQuestion = ({\n  questionId,\n  onClose,\n  isEditOpen\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [questionData, setQuestionData] = useState(null);\n\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request from the api to the server for getting the question to change\n      const response = await fetch(`${baseApiUrl}getEditQuestion`, {\n        method: \"\",\n        headers: {\n          \"x-access-token\": token\n        },\n        // Fix: Include questionId in the request body\n        body: JSON.stringify({\n          questionId: questionId\n        })\n      });\n      const fetchedData = await response.json();\n      if (fetchedData.status === \"ok\") {\n        setQuestionData(fetchedData);\n      } else {\n        console.error(fetchedData.error);\n      }\n    } catch (error) {\n      console.error(\"Error fetching edit question:\", error);\n    }\n  }\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen, questionId]); // Include questionId as a dependency\n\n  return isEditOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-screen-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question ID: \", questionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(EditUserQuestion, \"HM3PM7N0c9gXjl0cmI865xRAUwk=\", false, function () {\n  return [useNavigate];\n});\n_c = EditUserQuestion;\nexport default EditUserQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditUserQuestion\");","map":{"version":3,"names":["React","useEffect","useState","baseApiUrl","useNavigate","jsxDEV","_jsxDEV","EditUserQuestion","questionId","onClose","isEditOpen","_s","navigate","questionData","setQuestionData","getEditModal","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","fetchedData","json","status","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Home/Pages/Question/EditUserQuestions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./EditUserQuestion.css\";\nimport { baseApiUrl } from \"../apiConfig\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst EditUserQuestion = ({ questionId, onClose, isEditOpen }) => {\n  const navigate = useNavigate();\n  const [questionData, setQuestionData] = useState(null);\n\n  // Function to fetch edit question from the server\n  async function getEditModal() {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      // send a fetch request from the api to the server for getting the question to change\n      const response = await fetch(`${baseApiUrl}getEditQuestion`, {\n        method: \"\",\n        headers: {\n          \"x-access-token\": token,\n        },\n        // Fix: Include questionId in the request body\n        body: JSON.stringify({\n          questionId: questionId,\n        }),\n      });\n\n      const fetchedData = await response.json();\n\n      if (fetchedData.status === \"ok\") {\n        setQuestionData(fetchedData);\n      } else {\n        console.error(fetchedData.error);\n      }\n    } catch (error) {\n      console.error(\"Error fetching edit question:\", error);\n    }\n  }\n\n  useEffect(() => {\n    if (isEditOpen) {\n      getEditModal();\n    }\n  }, [isEditOpen, questionId]); // Include questionId as a dependency\n\n  return (\n    isEditOpen && (\n      <div className=\"full-screen-modal\">\n        <div className=\"modal-content\">\n          <h1>Edit Question</h1>\n          <p>Question ID: {questionId}</p>\n          <textarea placeholder=\"Ask your question...\" />\n          <button className=\"close-button\" onClick={onClose}>\n            Close\n          </button>\n          {/* Render additional elements as needed */}\n          {/* For example, a submit button */}\n          {/* <button className=\"submit-button\">Submit</button> */}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default EditUserQuestion;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,eAAea,YAAYA,CAAA,EAAG;IAC5B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVJ,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;;MAEA;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEjB,UAAW,iBAAgB,EAAE;QAC3DkB,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;UACP,gBAAgB,EAAEN;QACpB,CAAC;QACD;QACAO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,UAAU,EAAEA;QACd,CAAC;MACH,CAAC,CAAC;MAEF,MAAMkB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEzC,IAAID,WAAW,CAACE,MAAM,KAAK,IAAI,EAAE;QAC/Bd,eAAe,CAACY,WAAW,CAAC;MAC9B,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAACJ,WAAW,CAACI,KAAK,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF;EAEA7B,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,EAAE;MACdK,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACL,UAAU,EAAEF,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,OACEE,UAAU,iBACRJ,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC1B,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B1B,OAAA;QAAA0B,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB9B,OAAA;QAAA0B,QAAA,GAAG,eAAa,EAACxB,UAAU;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC9B,OAAA;QAAU+B,WAAW,EAAC;MAAsB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/C9B,OAAA;QAAQyB,SAAS,EAAC,cAAc;QAACO,OAAO,EAAE7B,OAAQ;QAAAuB,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;AAEL,CAAC;AAACzB,EAAA,CA7DIJ,gBAAgB;EAAA,QACHH,WAAW;AAAA;AAAAmC,EAAA,GADxBhC,gBAAgB;AA+DtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}