{"ast":null,"code":"var _jsxFileName = \"/Users/duktartamang/disussionforum_proto/client/src/Components/Dashboard/GetProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { UserProfileImage } from \"./ProfileImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetProfile = () => {\n  _s();\n  const {\n    profileImage,\n    setProfileImage\n  } = UserProfileImage();\n  const [loading, setLoading] = useState(true);\n\n  // Fetch profile from the server\n  async function getProfile() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const req = await fetch(\"http://localhost:1337/api/getProfile\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token\n        }\n      });\n      const data = await req.json();\n      if (data.status === \"ok\") {\n        setLoading(false);\n        if (profileImage) setProfileImage(\"http://localhost:1337/\" + data.profile);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching the profile:\", error);\n      alert(\"An error occurred while fetching the profile. Please check the console for details.\");\n    }\n  }\n\n  // Execute the getProfile function when the component mounts\n  useEffect(() => {\n    getProfile();\n  }, [profileImage]); // An empty dependency array ensures this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: profileImage,\n      alt: \"User Profile\",\n      style: {\n        height: 100,\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GetProfile, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = GetProfile;\nexport default GetProfile;\nvar _c;\n$RefreshReg$(_c, \"GetProfile\");","map":{"version":3,"names":["React","useState","useEffect","UserProfileImage","jsxDEV","_jsxDEV","GetProfile","_s","profileImage","setProfileImage","loading","setLoading","getProfile","token","localStorage","getItem","req","fetch","method","headers","data","json","status","profile","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","height","width","_c","$RefreshReg$"],"sources":["/Users/duktartamang/disussionforum_proto/client/src/Components/Dashboard/GetProfile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { UserProfileImage } from \"./ProfileImageContext\";\n\nconst GetProfile = () => {\n  const {profileImage,setProfileImage} = UserProfileImage();\n  const [loading, setLoading] = useState(true);\n  \n\n  // Fetch profile from the server\n  async function getProfile() {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const req = await fetch(\"http://localhost:1337/api/getProfile\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      });\n\n        const data = await req.json();\n        if (data.status === \"ok\") {\n          setLoading(false);\n          if(profileImage)\n          setProfileImage(\"http://localhost:1337/\" + data.profile);\n        } else {\n          alert(data.error);\n        }\n     \n    } catch (error) {\n      console.error(\"An error occurred while fetching the profile:\", error);\n      alert(\n        \"An error occurred while fetching the profile. Please check the console for details.\"\n      );\n    }\n  }\n\n  // Execute the getProfile function when the component mounts\n  useEffect(() => {\n    getProfile();\n  }, [profileImage]); // An empty dependency array ensures this effect runs only once\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <img\n          src={profileImage}\n          alt=\"User Profile\"\n          style={{ height: 100, width: 200 }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GetProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAACC,YAAY;IAACC;EAAe,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EACzD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAG5C;EACA,eAAeW,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QAC9DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAEN;QACpB;MACF,CAAC,CAAC;MAEA,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;QACxBX,UAAU,CAAC,KAAK,CAAC;QACjB,IAAGH,YAAY,EACfC,eAAe,CAAC,wBAAwB,GAAGW,IAAI,CAACG,OAAO,CAAC;MAC1D,CAAC,MAAM;QACLC,KAAK,CAACJ,IAAI,CAACK,KAAK,CAAC;MACnB;IAEJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrED,KAAK,CACH,qFACF,CAAC;IACH;EACF;;EAEA;EACAtB,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB,oBACEH,OAAA;IAAAsB,QAAA,EACGjB,OAAO,gBACNL,OAAA;MAAAsB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB1B,OAAA;MACE2B,GAAG,EAAExB,YAAa;MAClByB,GAAG,EAAC,cAAc;MAClBC,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAI;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CApDID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}